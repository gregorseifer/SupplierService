// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SupplierService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class SupplierService
{
  static readonly string __ServiceName = "SupplierService";

  static readonly grpc::Marshaller<global::Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Empty.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::SupplierList> __Marshaller_SupplierList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SupplierList.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::ProductList> __Marshaller_ProductList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ProductList.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::Product> __Marshaller_Product = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Product.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::Supplier> __Marshaller_Supplier = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Supplier.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::SetSupplierParams> __Marshaller_SetSupplierParams = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SetSupplierParams.Parser.ParseFrom);

  static readonly grpc::Method<global::Empty, global::SupplierList> __Method_findAllPreferredSuppliers = new grpc::Method<global::Empty, global::SupplierList>(
      grpc::MethodType.Unary,
      __ServiceName,
      "findAllPreferredSuppliers",
      __Marshaller_Empty,
      __Marshaller_SupplierList);

  static readonly grpc::Method<global::Empty, global::SupplierList> __Method_findAllSuppliers = new grpc::Method<global::Empty, global::SupplierList>(
      grpc::MethodType.Unary,
      __ServiceName,
      "findAllSuppliers",
      __Marshaller_Empty,
      __Marshaller_SupplierList);

  static readonly grpc::Method<global::Empty, global::ProductList> __Method_findAllProducts = new grpc::Method<global::Empty, global::ProductList>(
      grpc::MethodType.Unary,
      __ServiceName,
      "findAllProducts",
      __Marshaller_Empty,
      __Marshaller_ProductList);

  static readonly grpc::Method<global::Product, global::Supplier> __Method_findPreferredSupplier = new grpc::Method<global::Product, global::Supplier>(
      grpc::MethodType.Unary,
      __ServiceName,
      "findPreferredSupplier",
      __Marshaller_Product,
      __Marshaller_Supplier);

  static readonly grpc::Method<global::SetSupplierParams, global::Empty> __Method_setPreferredSupplierForProduct = new grpc::Method<global::SetSupplierParams, global::Empty>(
      grpc::MethodType.Unary,
      __ServiceName,
      "setPreferredSupplierForProduct",
      __Marshaller_SetSupplierParams,
      __Marshaller_Empty);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::SupplierServiceReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of SupplierService</summary>
  [grpc::BindServiceMethod(typeof(SupplierService), "BindService")]
  public abstract partial class SupplierServiceBase
  {
    public virtual global::System.Threading.Tasks.Task<global::SupplierList> findAllPreferredSuppliers(global::Empty request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::SupplierList> findAllSuppliers(global::Empty request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::ProductList> findAllProducts(global::Empty request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::Supplier> findPreferredSupplier(global::Product request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::Empty> setPreferredSupplierForProduct(global::SetSupplierParams request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for SupplierService</summary>
  public partial class SupplierServiceClient : grpc::ClientBase<SupplierServiceClient>
  {
    /// <summary>Creates a new client for SupplierService</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    public SupplierServiceClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for SupplierService that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    public SupplierServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    protected SupplierServiceClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    protected SupplierServiceClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    public virtual global::SupplierList findAllPreferredSuppliers(global::Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return findAllPreferredSuppliers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::SupplierList findAllPreferredSuppliers(global::Empty request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_findAllPreferredSuppliers, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::SupplierList> findAllPreferredSuppliersAsync(global::Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return findAllPreferredSuppliersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::SupplierList> findAllPreferredSuppliersAsync(global::Empty request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_findAllPreferredSuppliers, null, options, request);
    }
    public virtual global::SupplierList findAllSuppliers(global::Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return findAllSuppliers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::SupplierList findAllSuppliers(global::Empty request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_findAllSuppliers, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::SupplierList> findAllSuppliersAsync(global::Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return findAllSuppliersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::SupplierList> findAllSuppliersAsync(global::Empty request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_findAllSuppliers, null, options, request);
    }
    public virtual global::ProductList findAllProducts(global::Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return findAllProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::ProductList findAllProducts(global::Empty request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_findAllProducts, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::ProductList> findAllProductsAsync(global::Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return findAllProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::ProductList> findAllProductsAsync(global::Empty request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_findAllProducts, null, options, request);
    }
    public virtual global::Supplier findPreferredSupplier(global::Product request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return findPreferredSupplier(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::Supplier findPreferredSupplier(global::Product request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_findPreferredSupplier, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::Supplier> findPreferredSupplierAsync(global::Product request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return findPreferredSupplierAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::Supplier> findPreferredSupplierAsync(global::Product request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_findPreferredSupplier, null, options, request);
    }
    public virtual global::Empty setPreferredSupplierForProduct(global::SetSupplierParams request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return setPreferredSupplierForProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::Empty setPreferredSupplierForProduct(global::SetSupplierParams request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_setPreferredSupplierForProduct, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::Empty> setPreferredSupplierForProductAsync(global::SetSupplierParams request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return setPreferredSupplierForProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::Empty> setPreferredSupplierForProductAsync(global::SetSupplierParams request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_setPreferredSupplierForProduct, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    protected override SupplierServiceClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new SupplierServiceClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static grpc::ServerServiceDefinition BindService(SupplierServiceBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_findAllPreferredSuppliers, serviceImpl.findAllPreferredSuppliers)
        .AddMethod(__Method_findAllSuppliers, serviceImpl.findAllSuppliers)
        .AddMethod(__Method_findAllProducts, serviceImpl.findAllProducts)
        .AddMethod(__Method_findPreferredSupplier, serviceImpl.findPreferredSupplier)
        .AddMethod(__Method_setPreferredSupplierForProduct, serviceImpl.setPreferredSupplierForProduct).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static void BindService(grpc::ServiceBinderBase serviceBinder, SupplierServiceBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_findAllPreferredSuppliers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Empty, global::SupplierList>(serviceImpl.findAllPreferredSuppliers));
    serviceBinder.AddMethod(__Method_findAllSuppliers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Empty, global::SupplierList>(serviceImpl.findAllSuppliers));
    serviceBinder.AddMethod(__Method_findAllProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Empty, global::ProductList>(serviceImpl.findAllProducts));
    serviceBinder.AddMethod(__Method_findPreferredSupplier, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Product, global::Supplier>(serviceImpl.findPreferredSupplier));
    serviceBinder.AddMethod(__Method_setPreferredSupplierForProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SetSupplierParams, global::Empty>(serviceImpl.setPreferredSupplierForProduct));
  }

}
#endregion
